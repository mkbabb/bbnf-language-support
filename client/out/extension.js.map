{"version":3,"file":"extension.js","sources":["../../node_modules/color-name/index.js","../../node_modules/color-convert/conversions.js","../../node_modules/color-convert/route.js","../../node_modules/color-convert/index.js","../../node_modules/ansi-styles/index.js","../../node_modules/supports-color/browser.js","../../node_modules/chalk/source/util.js","../../node_modules/chalk/source/templates.js","../../node_modules/chalk/source/index.js","../../node_modules/@mkbabb/parse-that/dist/parse.js","../../node_modules/@mkbabb/parse-that/dist/ebnf.js","../src/extension.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport chalk from \"chalk\";\nvar docExports = {};\nvar doc = {\n  get exports() {\n    return docExports;\n  },\n  set exports(v) {\n    docExports = v;\n  }\n};\n(function(module, exports) {\n  (function(factory) {\n    {\n      module.exports = factory();\n    }\n  })(function() {\n    var __getOwnPropNames = Object.getOwnPropertyNames;\n    var __commonJS = (cb, mod) => function __require() {\n      return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n    };\n    var require_doc_js_umd = __commonJS({\n      \"dist/_doc.js.umd.js\"(exports2, module2) {\n        var __create = Object.create;\n        var __defProp2 = Object.defineProperty;\n        var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n        var __getOwnPropNames2 = Object.getOwnPropertyNames;\n        var __getProtoOf = Object.getPrototypeOf;\n        var __hasOwnProp = Object.prototype.hasOwnProperty;\n        var __esm = (fn, res) => function __init() {\n          return fn && (res = (0, fn[__getOwnPropNames2(fn)[0]])(fn = 0)), res;\n        };\n        var __commonJS2 = (cb, mod) => function __require() {\n          return mod || (0, cb[__getOwnPropNames2(cb)[0]])((mod = {\n            exports: {}\n          }).exports, mod), mod.exports;\n        };\n        var __export = (target, all2) => {\n          for (var name in all2)\n            __defProp2(target, name, {\n              get: all2[name],\n              enumerable: true\n            });\n        };\n        var __copyProps = (to, from, except, desc) => {\n          if (from && typeof from === \"object\" || typeof from === \"function\") {\n            for (let key of __getOwnPropNames2(from))\n              if (!__hasOwnProp.call(to, key) && key !== except)\n                __defProp2(to, key, {\n                  get: () => from[key],\n                  enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n                });\n          }\n          return to;\n        };\n        var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp2(target, \"default\", {\n          value: mod,\n          enumerable: true\n        }) : target, mod));\n        var __toCommonJS = (mod) => __copyProps(__defProp2({}, \"__esModule\", {\n          value: true\n        }), mod);\n        var init_define_process = __esm({\n          \"<define:process>\"() {\n          }\n        });\n        var require_doc_builders = __commonJS2({\n          \"src/document/doc-builders.js\"(exports22, module22) {\n            init_define_process();\n            function concat(parts) {\n              return {\n                type: \"concat\",\n                parts\n              };\n            }\n            function indent(contents) {\n              return {\n                type: \"indent\",\n                contents\n              };\n            }\n            function align(widthOrString, contents) {\n              return {\n                type: \"align\",\n                contents,\n                n: widthOrString\n              };\n            }\n            function group2(contents) {\n              let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n              return {\n                type: \"group\",\n                id: opts.id,\n                contents,\n                break: Boolean(opts.shouldBreak),\n                expandedStates: opts.expandedStates\n              };\n            }\n            function dedentToRoot(contents) {\n              return align(Number.NEGATIVE_INFINITY, contents);\n            }\n            function markAsRoot(contents) {\n              return align({\n                type: \"root\"\n              }, contents);\n            }\n            function dedent(contents) {\n              return align(-1, contents);\n            }\n            function conditionalGroup(states, opts) {\n              return group2(states[0], Object.assign(Object.assign({}, opts), {}, {\n                expandedStates: states\n              }));\n            }\n            function fill(parts) {\n              return {\n                type: \"fill\",\n                parts\n              };\n            }\n            function ifBreak(breakContents, flatContents) {\n              let opts = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n              return {\n                type: \"if-break\",\n                breakContents,\n                flatContents,\n                groupId: opts.groupId\n              };\n            }\n            function indentIfBreak(contents, opts) {\n              return {\n                type: \"indent-if-break\",\n                contents,\n                groupId: opts.groupId,\n                negate: opts.negate\n              };\n            }\n            function lineSuffix(contents) {\n              return {\n                type: \"line-suffix\",\n                contents\n              };\n            }\n            var lineSuffixBoundary = {\n              type: \"line-suffix-boundary\"\n            };\n            var breakParent = {\n              type: \"break-parent\"\n            };\n            var trim = {\n              type: \"trim\"\n            };\n            var hardlineWithoutBreakParent = {\n              type: \"line\",\n              hard: true\n            };\n            var literallineWithoutBreakParent = {\n              type: \"line\",\n              hard: true,\n              literal: true\n            };\n            var line = {\n              type: \"line\"\n            };\n            var softline = {\n              type: \"line\",\n              soft: true\n            };\n            var hardline = concat([hardlineWithoutBreakParent, breakParent]);\n            var literalline = concat([literallineWithoutBreakParent, breakParent]);\n            var cursor = {\n              type: \"cursor\",\n              placeholder: Symbol(\"cursor\")\n            };\n            function join(sep, arr) {\n              const res = [];\n              for (let i = 0; i < arr.length; i++) {\n                if (i !== 0) {\n                  res.push(sep);\n                }\n                res.push(arr[i]);\n              }\n              return concat(res);\n            }\n            function addAlignmentToDoc(doc2, size, tabWidth) {\n              let aligned = doc2;\n              if (size > 0) {\n                for (let i = 0; i < Math.floor(size / tabWidth); ++i) {\n                  aligned = indent(aligned);\n                }\n                aligned = align(size % tabWidth, aligned);\n                aligned = align(Number.NEGATIVE_INFINITY, aligned);\n              }\n              return aligned;\n            }\n            function label(label2, contents) {\n              return {\n                type: \"label\",\n                label: label2,\n                contents\n              };\n            }\n            module22.exports = {\n              concat,\n              join,\n              line,\n              softline,\n              hardline,\n              literalline,\n              group: group2,\n              conditionalGroup,\n              fill,\n              lineSuffix,\n              lineSuffixBoundary,\n              cursor,\n              breakParent,\n              ifBreak,\n              trim,\n              indent,\n              indentIfBreak,\n              align,\n              addAlignmentToDoc,\n              markAsRoot,\n              dedentToRoot,\n              dedent,\n              hardlineWithoutBreakParent,\n              literallineWithoutBreakParent,\n              label\n            };\n          }\n        });\n        var require_end_of_line = __commonJS2({\n          \"src/common/end-of-line.js\"(exports22, module22) {\n            init_define_process();\n            function guessEndOfLine(text) {\n              const index = text.indexOf(\"\\r\");\n              if (index >= 0) {\n                return text.charAt(index + 1) === \"\\n\" ? \"crlf\" : \"cr\";\n              }\n              return \"lf\";\n            }\n            function convertEndOfLineToChars(value) {\n              switch (value) {\n                case \"cr\":\n                  return \"\\r\";\n                case \"crlf\":\n                  return \"\\r\\n\";\n                default:\n                  return \"\\n\";\n              }\n            }\n            function countEndOfLineChars(text, eol) {\n              let regex2;\n              switch (eol) {\n                case \"\\n\":\n                  regex2 = /\\n/g;\n                  break;\n                case \"\\r\":\n                  regex2 = /\\r/g;\n                  break;\n                case \"\\r\\n\":\n                  regex2 = /\\r\\n/g;\n                  break;\n                default:\n                  throw new Error(`Unexpected \"eol\" ${JSON.stringify(eol)}.`);\n              }\n              const endOfLines = text.match(regex2);\n              return endOfLines ? endOfLines.length : 0;\n            }\n            function normalizeEndOfLine(text) {\n              return text.replace(/\\r\\n?/g, \"\\n\");\n            }\n            module22.exports = {\n              guessEndOfLine,\n              convertEndOfLineToChars,\n              countEndOfLineChars,\n              normalizeEndOfLine\n            };\n          }\n        });\n        var require_get_last = __commonJS2({\n          \"src/utils/get-last.js\"(exports22, module22) {\n            init_define_process();\n            var getLast = (arr) => arr[arr.length - 1];\n            module22.exports = getLast;\n          }\n        });\n        function ansiRegex() {\n          let {\n            onlyFirst = false\n          } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n          const pattern = [\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\", \"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");\n          return new RegExp(pattern, onlyFirst ? void 0 : \"g\");\n        }\n        var init_ansi_regex = __esm({\n          \"node_modules/strip-ansi/node_modules/ansi-regex/index.js\"() {\n            init_define_process();\n          }\n        });\n        function stripAnsi(string2) {\n          if (typeof string2 !== \"string\") {\n            throw new TypeError(`Expected a \\`string\\`, got \\`${typeof string2}\\``);\n          }\n          return string2.replace(ansiRegex(), \"\");\n        }\n        var init_strip_ansi = __esm({\n          \"node_modules/strip-ansi/index.js\"() {\n            init_define_process();\n            init_ansi_regex();\n          }\n        });\n        function isFullwidthCodePoint(codePoint) {\n          if (!Number.isInteger(codePoint)) {\n            return false;\n          }\n          return codePoint >= 4352 && (codePoint <= 4447 || codePoint === 9001 || codePoint === 9002 || 11904 <= codePoint && codePoint <= 12871 && codePoint !== 12351 || 12880 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65131 || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 262141);\n        }\n        var init_is_fullwidth_code_point = __esm({\n          \"node_modules/is-fullwidth-code-point/index.js\"() {\n            init_define_process();\n          }\n        });\n        var require_emoji_regex = __commonJS2({\n          \"node_modules/emoji-regex/index.js\"(exports22, module22) {\n            init_define_process();\n            module22.exports = function() {\n              return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|(?:\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C\\uDFFB(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))?|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC)?|(?:\\uD83D\\uDC69(?:\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83E\\uDDD1(?:\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3])\\uFE0F|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB|\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC69(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79)|\\uD83D\\uDC41\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\u2764\\uFE0F|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF4|(?:[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270C\\u270D]|\\uD83D[\\uDD74\\uDD90])(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC08\\uDC15\\uDC3B\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE2E\\uDE35\\uDE36\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5]|\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD]|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF]|[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD1D\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78\\uDD7A-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCB\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6]|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n            };\n          }\n        });\n        var string_width_exports = {};\n        __export(string_width_exports, {\n          default: () => stringWidth\n        });\n        function stringWidth(string2) {\n          if (typeof string2 !== \"string\" || string2.length === 0) {\n            return 0;\n          }\n          string2 = stripAnsi(string2);\n          if (string2.length === 0) {\n            return 0;\n          }\n          string2 = string2.replace((0, import_emoji_regex.default)(), \"  \");\n          let width = 0;\n          for (let index = 0; index < string2.length; index++) {\n            const codePoint = string2.codePointAt(index);\n            if (codePoint <= 31 || codePoint >= 127 && codePoint <= 159) {\n              continue;\n            }\n            if (codePoint >= 768 && codePoint <= 879) {\n              continue;\n            }\n            if (codePoint > 65535) {\n              index++;\n            }\n            width += isFullwidthCodePoint(codePoint) ? 2 : 1;\n          }\n          return width;\n        }\n        var import_emoji_regex;\n        var init_string_width = __esm({\n          \"node_modules/string-width/index.js\"() {\n            init_define_process();\n            init_strip_ansi();\n            init_is_fullwidth_code_point();\n            import_emoji_regex = __toESM(require_emoji_regex());\n          }\n        });\n        var require_get_string_width = __commonJS2({\n          \"src/utils/get-string-width.js\"(exports22, module22) {\n            init_define_process();\n            var stringWidth2 = (init_string_width(), __toCommonJS(string_width_exports)).default;\n            var notAsciiRegex = /[^\\x20-\\x7F]/;\n            function getStringWidth(text) {\n              if (!text) {\n                return 0;\n              }\n              if (!notAsciiRegex.test(text)) {\n                return text.length;\n              }\n              return stringWidth2(text);\n            }\n            module22.exports = getStringWidth;\n          }\n        });\n        var require_doc_utils = __commonJS2({\n          \"src/document/doc-utils.js\"(exports22, module22) {\n            init_define_process();\n            var getLast = require_get_last();\n            var {\n              literalline,\n              join\n            } = require_doc_builders();\n            var isConcat = (doc2) => Array.isArray(doc2) || doc2 && doc2.type === \"concat\";\n            var getDocParts = (doc2) => {\n              if (Array.isArray(doc2)) {\n                return doc2;\n              }\n              if (doc2.type !== \"concat\" && doc2.type !== \"fill\") {\n                throw new Error(\"Expect doc type to be `concat` or `fill`.\");\n              }\n              return doc2.parts;\n            };\n            var traverseDocOnExitStackMarker = {};\n            function traverseDoc(doc2, onEnter, onExit, shouldTraverseConditionalGroups) {\n              const docsStack = [doc2];\n              while (docsStack.length > 0) {\n                const doc22 = docsStack.pop();\n                if (doc22 === traverseDocOnExitStackMarker) {\n                  onExit(docsStack.pop());\n                  continue;\n                }\n                if (onExit) {\n                  docsStack.push(doc22, traverseDocOnExitStackMarker);\n                }\n                if (!onEnter || onEnter(doc22) !== false) {\n                  if (isConcat(doc22) || doc22.type === \"fill\") {\n                    const parts = getDocParts(doc22);\n                    for (let ic = parts.length, i = ic - 1; i >= 0; --i) {\n                      docsStack.push(parts[i]);\n                    }\n                  } else if (doc22.type === \"if-break\") {\n                    if (doc22.flatContents) {\n                      docsStack.push(doc22.flatContents);\n                    }\n                    if (doc22.breakContents) {\n                      docsStack.push(doc22.breakContents);\n                    }\n                  } else if (doc22.type === \"group\" && doc22.expandedStates) {\n                    if (shouldTraverseConditionalGroups) {\n                      for (let ic = doc22.expandedStates.length, i = ic - 1; i >= 0; --i) {\n                        docsStack.push(doc22.expandedStates[i]);\n                      }\n                    } else {\n                      docsStack.push(doc22.contents);\n                    }\n                  } else if (doc22.contents) {\n                    docsStack.push(doc22.contents);\n                  }\n                }\n              }\n            }\n            function mapDoc(doc2, cb) {\n              const mapped = /* @__PURE__ */ new Map();\n              return rec(doc2);\n              function rec(doc22) {\n                if (mapped.has(doc22)) {\n                  return mapped.get(doc22);\n                }\n                const result = process2(doc22);\n                mapped.set(doc22, result);\n                return result;\n              }\n              function process2(doc22) {\n                if (Array.isArray(doc22)) {\n                  return cb(doc22.map(rec));\n                }\n                if (doc22.type === \"concat\" || doc22.type === \"fill\") {\n                  const parts = doc22.parts.map(rec);\n                  return cb(Object.assign(Object.assign({}, doc22), {}, {\n                    parts\n                  }));\n                }\n                if (doc22.type === \"if-break\") {\n                  const breakContents = doc22.breakContents && rec(doc22.breakContents);\n                  const flatContents = doc22.flatContents && rec(doc22.flatContents);\n                  return cb(Object.assign(Object.assign({}, doc22), {}, {\n                    breakContents,\n                    flatContents\n                  }));\n                }\n                if (doc22.type === \"group\" && doc22.expandedStates) {\n                  const expandedStates = doc22.expandedStates.map(rec);\n                  const contents = expandedStates[0];\n                  return cb(Object.assign(Object.assign({}, doc22), {}, {\n                    contents,\n                    expandedStates\n                  }));\n                }\n                if (doc22.contents) {\n                  const contents = rec(doc22.contents);\n                  return cb(Object.assign(Object.assign({}, doc22), {}, {\n                    contents\n                  }));\n                }\n                return cb(doc22);\n              }\n            }\n            function findInDoc(doc2, fn, defaultValue) {\n              let result = defaultValue;\n              let hasStopped = false;\n              function findInDocOnEnterFn(doc22) {\n                const maybeResult = fn(doc22);\n                if (maybeResult !== void 0) {\n                  hasStopped = true;\n                  result = maybeResult;\n                }\n                if (hasStopped) {\n                  return false;\n                }\n              }\n              traverseDoc(doc2, findInDocOnEnterFn);\n              return result;\n            }\n            function willBreakFn(doc2) {\n              if (doc2.type === \"group\" && doc2.break) {\n                return true;\n              }\n              if (doc2.type === \"line\" && doc2.hard) {\n                return true;\n              }\n              if (doc2.type === \"break-parent\") {\n                return true;\n              }\n            }\n            function willBreak(doc2) {\n              return findInDoc(doc2, willBreakFn, false);\n            }\n            function breakParentGroup(groupStack) {\n              if (groupStack.length > 0) {\n                const parentGroup = getLast(groupStack);\n                if (!parentGroup.expandedStates && !parentGroup.break) {\n                  parentGroup.break = \"propagated\";\n                }\n              }\n              return null;\n            }\n            function propagateBreaks(doc2) {\n              const alreadyVisitedSet = /* @__PURE__ */ new Set();\n              const groupStack = [];\n              function propagateBreaksOnEnterFn(doc22) {\n                if (doc22.type === \"break-parent\") {\n                  breakParentGroup(groupStack);\n                }\n                if (doc22.type === \"group\") {\n                  groupStack.push(doc22);\n                  if (alreadyVisitedSet.has(doc22)) {\n                    return false;\n                  }\n                  alreadyVisitedSet.add(doc22);\n                }\n              }\n              function propagateBreaksOnExitFn(doc22) {\n                if (doc22.type === \"group\") {\n                  const group2 = groupStack.pop();\n                  if (group2.break) {\n                    breakParentGroup(groupStack);\n                  }\n                }\n              }\n              traverseDoc(doc2, propagateBreaksOnEnterFn, propagateBreaksOnExitFn, true);\n            }\n            function removeLinesFn(doc2) {\n              if (doc2.type === \"line\" && !doc2.hard) {\n                return doc2.soft ? \"\" : \" \";\n              }\n              if (doc2.type === \"if-break\") {\n                return doc2.flatContents || \"\";\n              }\n              return doc2;\n            }\n            function removeLines(doc2) {\n              return mapDoc(doc2, removeLinesFn);\n            }\n            var isHardline = (doc2, nextDoc) => doc2 && doc2.type === \"line\" && doc2.hard && nextDoc && nextDoc.type === \"break-parent\";\n            function stripDocTrailingHardlineFromDoc(doc2) {\n              if (!doc2) {\n                return doc2;\n              }\n              if (isConcat(doc2) || doc2.type === \"fill\") {\n                const parts = getDocParts(doc2);\n                while (parts.length > 1 && isHardline(...parts.slice(-2))) {\n                  parts.length -= 2;\n                }\n                if (parts.length > 0) {\n                  const lastPart = stripDocTrailingHardlineFromDoc(getLast(parts));\n                  parts[parts.length - 1] = lastPart;\n                }\n                return Array.isArray(doc2) ? parts : Object.assign(Object.assign({}, doc2), {}, {\n                  parts\n                });\n              }\n              switch (doc2.type) {\n                case \"align\":\n                case \"indent\":\n                case \"indent-if-break\":\n                case \"group\":\n                case \"line-suffix\":\n                case \"label\": {\n                  const contents = stripDocTrailingHardlineFromDoc(doc2.contents);\n                  return Object.assign(Object.assign({}, doc2), {}, {\n                    contents\n                  });\n                }\n                case \"if-break\": {\n                  const breakContents = stripDocTrailingHardlineFromDoc(doc2.breakContents);\n                  const flatContents = stripDocTrailingHardlineFromDoc(doc2.flatContents);\n                  return Object.assign(Object.assign({}, doc2), {}, {\n                    breakContents,\n                    flatContents\n                  });\n                }\n              }\n              return doc2;\n            }\n            function stripTrailingHardline(doc2) {\n              return stripDocTrailingHardlineFromDoc(cleanDoc(doc2));\n            }\n            function cleanDocFn(doc2) {\n              switch (doc2.type) {\n                case \"fill\":\n                  if (doc2.parts.every((part) => part === \"\")) {\n                    return \"\";\n                  }\n                  break;\n                case \"group\":\n                  if (!doc2.contents && !doc2.id && !doc2.break && !doc2.expandedStates) {\n                    return \"\";\n                  }\n                  if (doc2.contents.type === \"group\" && doc2.contents.id === doc2.id && doc2.contents.break === doc2.break && doc2.contents.expandedStates === doc2.expandedStates) {\n                    return doc2.contents;\n                  }\n                  break;\n                case \"align\":\n                case \"indent\":\n                case \"indent-if-break\":\n                case \"line-suffix\":\n                  if (!doc2.contents) {\n                    return \"\";\n                  }\n                  break;\n                case \"if-break\":\n                  if (!doc2.flatContents && !doc2.breakContents) {\n                    return \"\";\n                  }\n                  break;\n              }\n              if (!isConcat(doc2)) {\n                return doc2;\n              }\n              const parts = [];\n              for (const part of getDocParts(doc2)) {\n                if (!part) {\n                  continue;\n                }\n                const [currentPart, ...restParts] = isConcat(part) ? getDocParts(part) : [part];\n                if (typeof currentPart === \"string\" && typeof getLast(parts) === \"string\") {\n                  parts[parts.length - 1] += currentPart;\n                } else {\n                  parts.push(currentPart);\n                }\n                parts.push(...restParts);\n              }\n              if (parts.length === 0) {\n                return \"\";\n              }\n              if (parts.length === 1) {\n                return parts[0];\n              }\n              return Array.isArray(doc2) ? parts : Object.assign(Object.assign({}, doc2), {}, {\n                parts\n              });\n            }\n            function cleanDoc(doc2) {\n              return mapDoc(doc2, (currentDoc) => cleanDocFn(currentDoc));\n            }\n            function normalizeParts(parts) {\n              const newParts = [];\n              const restParts = parts.filter(Boolean);\n              while (restParts.length > 0) {\n                const part = restParts.shift();\n                if (!part) {\n                  continue;\n                }\n                if (isConcat(part)) {\n                  restParts.unshift(...getDocParts(part));\n                  continue;\n                }\n                if (newParts.length > 0 && typeof getLast(newParts) === \"string\" && typeof part === \"string\") {\n                  newParts[newParts.length - 1] += part;\n                  continue;\n                }\n                newParts.push(part);\n              }\n              return newParts;\n            }\n            function normalizeDoc(doc2) {\n              return mapDoc(doc2, (currentDoc) => {\n                if (Array.isArray(currentDoc)) {\n                  return normalizeParts(currentDoc);\n                }\n                if (!currentDoc.parts) {\n                  return currentDoc;\n                }\n                return Object.assign(Object.assign({}, currentDoc), {}, {\n                  parts: normalizeParts(currentDoc.parts)\n                });\n              });\n            }\n            function replaceEndOfLine(doc2) {\n              return mapDoc(doc2, (currentDoc) => typeof currentDoc === \"string\" && currentDoc.includes(\"\\n\") ? replaceTextEndOfLine(currentDoc) : currentDoc);\n            }\n            function replaceTextEndOfLine(text) {\n              let replacement = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : literalline;\n              return join(replacement, text.split(\"\\n\")).parts;\n            }\n            function canBreakFn(doc2) {\n              if (doc2.type === \"line\") {\n                return true;\n              }\n            }\n            function canBreak(doc2) {\n              return findInDoc(doc2, canBreakFn, false);\n            }\n            module22.exports = {\n              isConcat,\n              getDocParts,\n              willBreak,\n              traverseDoc,\n              findInDoc,\n              mapDoc,\n              propagateBreaks,\n              removeLines,\n              stripTrailingHardline,\n              normalizeParts,\n              normalizeDoc,\n              cleanDoc,\n              replaceTextEndOfLine,\n              replaceEndOfLine,\n              canBreak\n            };\n          }\n        });\n        var require_doc_printer = __commonJS2({\n          \"src/document/doc-printer.js\"(exports22, module22) {\n            init_define_process();\n            var {\n              convertEndOfLineToChars\n            } = require_end_of_line();\n            var getLast = require_get_last();\n            var getStringWidth = require_get_string_width();\n            var {\n              fill,\n              cursor,\n              indent\n            } = require_doc_builders();\n            var {\n              isConcat,\n              getDocParts\n            } = require_doc_utils();\n            var groupModeMap;\n            var MODE_BREAK = 1;\n            var MODE_FLAT = 2;\n            function rootIndent() {\n              return {\n                value: \"\",\n                length: 0,\n                queue: []\n              };\n            }\n            function makeIndent(ind, options) {\n              return generateInd(ind, {\n                type: \"indent\"\n              }, options);\n            }\n            function makeAlign(indent2, widthOrDoc, options) {\n              if (widthOrDoc === Number.NEGATIVE_INFINITY) {\n                return indent2.root || rootIndent();\n              }\n              if (widthOrDoc < 0) {\n                return generateInd(indent2, {\n                  type: \"dedent\"\n                }, options);\n              }\n              if (!widthOrDoc) {\n                return indent2;\n              }\n              if (widthOrDoc.type === \"root\") {\n                return Object.assign(Object.assign({}, indent2), {}, {\n                  root: indent2\n                });\n              }\n              const alignType = typeof widthOrDoc === \"string\" ? \"stringAlign\" : \"numberAlign\";\n              return generateInd(indent2, {\n                type: alignType,\n                n: widthOrDoc\n              }, options);\n            }\n            function generateInd(ind, newPart, options) {\n              const queue = newPart.type === \"dedent\" ? ind.queue.slice(0, -1) : [...ind.queue, newPart];\n              let value = \"\";\n              let length = 0;\n              let lastTabs = 0;\n              let lastSpaces = 0;\n              for (const part of queue) {\n                switch (part.type) {\n                  case \"indent\":\n                    flush();\n                    if (options.useTabs) {\n                      addTabs(1);\n                    } else {\n                      addSpaces(options.tabWidth);\n                    }\n                    break;\n                  case \"stringAlign\":\n                    flush();\n                    value += part.n;\n                    length += part.n.length;\n                    break;\n                  case \"numberAlign\":\n                    lastTabs += 1;\n                    lastSpaces += part.n;\n                    break;\n                  default:\n                    throw new Error(`Unexpected type '${part.type}'`);\n                }\n              }\n              flushSpaces();\n              return Object.assign(Object.assign({}, ind), {}, {\n                value,\n                length,\n                queue\n              });\n              function addTabs(count) {\n                value += \"\t\".repeat(count);\n                length += options.tabWidth * count;\n              }\n              function addSpaces(count) {\n                value += \" \".repeat(count);\n                length += count;\n              }\n              function flush() {\n                if (options.useTabs) {\n                  flushTabs();\n                } else {\n                  flushSpaces();\n                }\n              }\n              function flushTabs() {\n                if (lastTabs > 0) {\n                  addTabs(lastTabs);\n                }\n                resetLast();\n              }\n              function flushSpaces() {\n                if (lastSpaces > 0) {\n                  addSpaces(lastSpaces);\n                }\n                resetLast();\n              }\n              function resetLast() {\n                lastTabs = 0;\n                lastSpaces = 0;\n              }\n            }\n            function trim(out) {\n              if (out.length === 0) {\n                return 0;\n              }\n              let trimCount = 0;\n              while (out.length > 0 && typeof getLast(out) === \"string\" && /^[\\t ]*$/.test(getLast(out))) {\n                trimCount += out.pop().length;\n              }\n              if (out.length > 0 && typeof getLast(out) === \"string\") {\n                const trimmed = getLast(out).replace(/[\\t ]*$/, \"\");\n                trimCount += getLast(out).length - trimmed.length;\n                out[out.length - 1] = trimmed;\n              }\n              return trimCount;\n            }\n            function fits(next, restCommands, width, hasLineSuffix, mustBeFlat) {\n              let restIdx = restCommands.length;\n              const cmds = [next];\n              const out = [];\n              while (width >= 0) {\n                if (cmds.length === 0) {\n                  if (restIdx === 0) {\n                    return true;\n                  }\n                  cmds.push(restCommands[--restIdx]);\n                  continue;\n                }\n                const {\n                  mode,\n                  doc: doc2\n                } = cmds.pop();\n                if (typeof doc2 === \"string\") {\n                  out.push(doc2);\n                  width -= getStringWidth(doc2);\n                } else if (isConcat(doc2) || doc2.type === \"fill\") {\n                  const parts = getDocParts(doc2);\n                  for (let i = parts.length - 1; i >= 0; i--) {\n                    cmds.push({\n                      mode,\n                      doc: parts[i]\n                    });\n                  }\n                } else {\n                  switch (doc2.type) {\n                    case \"indent\":\n                    case \"align\":\n                    case \"indent-if-break\":\n                    case \"label\":\n                      cmds.push({\n                        mode,\n                        doc: doc2.contents\n                      });\n                      break;\n                    case \"trim\":\n                      width += trim(out);\n                      break;\n                    case \"group\": {\n                      if (mustBeFlat && doc2.break) {\n                        return false;\n                      }\n                      const groupMode = doc2.break ? MODE_BREAK : mode;\n                      const contents = doc2.expandedStates && groupMode === MODE_BREAK ? getLast(doc2.expandedStates) : doc2.contents;\n                      cmds.push({\n                        mode: groupMode,\n                        doc: contents\n                      });\n                      break;\n                    }\n                    case \"if-break\": {\n                      const groupMode = doc2.groupId ? groupModeMap[doc2.groupId] || MODE_FLAT : mode;\n                      const contents = groupMode === MODE_BREAK ? doc2.breakContents : doc2.flatContents;\n                      if (contents) {\n                        cmds.push({\n                          mode,\n                          doc: contents\n                        });\n                      }\n                      break;\n                    }\n                    case \"line\":\n                      if (mode === MODE_BREAK || doc2.hard) {\n                        return true;\n                      }\n                      if (!doc2.soft) {\n                        out.push(\" \");\n                        width--;\n                      }\n                      break;\n                    case \"line-suffix\":\n                      hasLineSuffix = true;\n                      break;\n                    case \"line-suffix-boundary\":\n                      if (hasLineSuffix) {\n                        return false;\n                      }\n                      break;\n                  }\n                }\n              }\n              return false;\n            }\n            function printDocToString(doc2, options) {\n              groupModeMap = {};\n              const width = options.printWidth;\n              const newLine = convertEndOfLineToChars(options.endOfLine);\n              let pos = 0;\n              const cmds = [{\n                ind: rootIndent(),\n                mode: MODE_BREAK,\n                doc: doc2\n              }];\n              const out = [];\n              let shouldRemeasure = false;\n              const lineSuffix = [];\n              while (cmds.length > 0) {\n                const {\n                  ind,\n                  mode,\n                  doc: doc22\n                } = cmds.pop();\n                if (typeof doc22 === \"string\") {\n                  const formatted = newLine !== \"\\n\" ? doc22.replace(/\\n/g, newLine) : doc22;\n                  out.push(formatted);\n                  pos += getStringWidth(formatted);\n                } else if (isConcat(doc22)) {\n                  const parts = getDocParts(doc22);\n                  for (let i = parts.length - 1; i >= 0; i--) {\n                    cmds.push({\n                      ind,\n                      mode,\n                      doc: parts[i]\n                    });\n                  }\n                } else {\n                  switch (doc22.type) {\n                    case \"cursor\":\n                      out.push(cursor.placeholder);\n                      break;\n                    case \"indent\":\n                      cmds.push({\n                        ind: makeIndent(ind, options),\n                        mode,\n                        doc: doc22.contents\n                      });\n                      break;\n                    case \"align\":\n                      cmds.push({\n                        ind: makeAlign(ind, doc22.n, options),\n                        mode,\n                        doc: doc22.contents\n                      });\n                      break;\n                    case \"trim\":\n                      pos -= trim(out);\n                      break;\n                    case \"group\":\n                      switch (mode) {\n                        case MODE_FLAT:\n                          if (!shouldRemeasure) {\n                            cmds.push({\n                              ind,\n                              mode: doc22.break ? MODE_BREAK : MODE_FLAT,\n                              doc: doc22.contents\n                            });\n                            break;\n                          }\n                        case MODE_BREAK: {\n                          shouldRemeasure = false;\n                          const next = {\n                            ind,\n                            mode: MODE_FLAT,\n                            doc: doc22.contents\n                          };\n                          const rem = width - pos;\n                          const hasLineSuffix = lineSuffix.length > 0;\n                          if (!doc22.break && fits(next, cmds, rem, hasLineSuffix)) {\n                            cmds.push(next);\n                          } else {\n                            if (doc22.expandedStates) {\n                              const mostExpanded = getLast(doc22.expandedStates);\n                              if (doc22.break) {\n                                cmds.push({\n                                  ind,\n                                  mode: MODE_BREAK,\n                                  doc: mostExpanded\n                                });\n                                break;\n                              } else {\n                                for (let i = 1; i < doc22.expandedStates.length + 1; i++) {\n                                  if (i >= doc22.expandedStates.length) {\n                                    cmds.push({\n                                      ind,\n                                      mode: MODE_BREAK,\n                                      doc: mostExpanded\n                                    });\n                                    break;\n                                  } else {\n                                    const state = doc22.expandedStates[i];\n                                    const cmd = {\n                                      ind,\n                                      mode: MODE_FLAT,\n                                      doc: state\n                                    };\n                                    if (fits(cmd, cmds, rem, hasLineSuffix)) {\n                                      cmds.push(cmd);\n                                      break;\n                                    }\n                                  }\n                                }\n                              }\n                            } else {\n                              cmds.push({\n                                ind,\n                                mode: MODE_BREAK,\n                                doc: doc22.contents\n                              });\n                            }\n                          }\n                          break;\n                        }\n                      }\n                      if (doc22.id) {\n                        groupModeMap[doc22.id] = getLast(cmds).mode;\n                      }\n                      break;\n                    case \"fill\": {\n                      const rem = width - pos;\n                      const {\n                        parts\n                      } = doc22;\n                      if (parts.length === 0) {\n                        break;\n                      }\n                      const [content, whitespace2] = parts;\n                      const contentFlatCmd = {\n                        ind,\n                        mode: MODE_FLAT,\n                        doc: content\n                      };\n                      const contentBreakCmd = {\n                        ind,\n                        mode: MODE_BREAK,\n                        doc: content\n                      };\n                      const contentFits = fits(contentFlatCmd, [], rem, lineSuffix.length > 0, true);\n                      if (parts.length === 1) {\n                        if (contentFits) {\n                          cmds.push(contentFlatCmd);\n                        } else {\n                          cmds.push(contentBreakCmd);\n                        }\n                        break;\n                      }\n                      const whitespaceFlatCmd = {\n                        ind,\n                        mode: MODE_FLAT,\n                        doc: whitespace2\n                      };\n                      const whitespaceBreakCmd = {\n                        ind,\n                        mode: MODE_BREAK,\n                        doc: whitespace2\n                      };\n                      if (parts.length === 2) {\n                        if (contentFits) {\n                          cmds.push(whitespaceFlatCmd, contentFlatCmd);\n                        } else {\n                          cmds.push(whitespaceBreakCmd, contentBreakCmd);\n                        }\n                        break;\n                      }\n                      parts.splice(0, 2);\n                      const remainingCmd = {\n                        ind,\n                        mode,\n                        doc: fill(parts)\n                      };\n                      const secondContent = parts[0];\n                      const firstAndSecondContentFlatCmd = {\n                        ind,\n                        mode: MODE_FLAT,\n                        doc: [content, whitespace2, secondContent]\n                      };\n                      const firstAndSecondContentFits = fits(firstAndSecondContentFlatCmd, [], rem, lineSuffix.length > 0, true);\n                      if (firstAndSecondContentFits) {\n                        cmds.push(remainingCmd, whitespaceFlatCmd, contentFlatCmd);\n                      } else if (contentFits) {\n                        cmds.push(remainingCmd, whitespaceBreakCmd, contentFlatCmd);\n                      } else {\n                        cmds.push(remainingCmd, whitespaceBreakCmd, contentBreakCmd);\n                      }\n                      break;\n                    }\n                    case \"if-break\":\n                    case \"indent-if-break\": {\n                      const groupMode = doc22.groupId ? groupModeMap[doc22.groupId] : mode;\n                      if (groupMode === MODE_BREAK) {\n                        const breakContents = doc22.type === \"if-break\" ? doc22.breakContents : doc22.negate ? doc22.contents : indent(doc22.contents);\n                        if (breakContents) {\n                          cmds.push({\n                            ind,\n                            mode,\n                            doc: breakContents\n                          });\n                        }\n                      }\n                      if (groupMode === MODE_FLAT) {\n                        const flatContents = doc22.type === \"if-break\" ? doc22.flatContents : doc22.negate ? indent(doc22.contents) : doc22.contents;\n                        if (flatContents) {\n                          cmds.push({\n                            ind,\n                            mode,\n                            doc: flatContents\n                          });\n                        }\n                      }\n                      break;\n                    }\n                    case \"line-suffix\":\n                      lineSuffix.push({\n                        ind,\n                        mode,\n                        doc: doc22.contents\n                      });\n                      break;\n                    case \"line-suffix-boundary\":\n                      if (lineSuffix.length > 0) {\n                        cmds.push({\n                          ind,\n                          mode,\n                          doc: {\n                            type: \"line\",\n                            hard: true\n                          }\n                        });\n                      }\n                      break;\n                    case \"line\":\n                      switch (mode) {\n                        case MODE_FLAT:\n                          if (!doc22.hard) {\n                            if (!doc22.soft) {\n                              out.push(\" \");\n                              pos += 1;\n                            }\n                            break;\n                          } else {\n                            shouldRemeasure = true;\n                          }\n                        case MODE_BREAK:\n                          if (lineSuffix.length > 0) {\n                            cmds.push({\n                              ind,\n                              mode,\n                              doc: doc22\n                            }, ...lineSuffix.reverse());\n                            lineSuffix.length = 0;\n                            break;\n                          }\n                          if (doc22.literal) {\n                            if (ind.root) {\n                              out.push(newLine, ind.root.value);\n                              pos = ind.root.length;\n                            } else {\n                              out.push(newLine);\n                              pos = 0;\n                            }\n                          } else {\n                            pos -= trim(out);\n                            out.push(newLine + ind.value);\n                            pos = ind.length;\n                          }\n                          break;\n                      }\n                      break;\n                    case \"label\":\n                      cmds.push({\n                        ind,\n                        mode,\n                        doc: doc22.contents\n                      });\n                      break;\n                  }\n                }\n                if (cmds.length === 0 && lineSuffix.length > 0) {\n                  cmds.push(...lineSuffix.reverse());\n                  lineSuffix.length = 0;\n                }\n              }\n              const cursorPlaceholderIndex = out.indexOf(cursor.placeholder);\n              if (cursorPlaceholderIndex !== -1) {\n                const otherCursorPlaceholderIndex = out.indexOf(cursor.placeholder, cursorPlaceholderIndex + 1);\n                const beforeCursor = out.slice(0, cursorPlaceholderIndex).join(\"\");\n                const aroundCursor = out.slice(cursorPlaceholderIndex + 1, otherCursorPlaceholderIndex).join(\"\");\n                const afterCursor = out.slice(otherCursorPlaceholderIndex + 1).join(\"\");\n                return {\n                  formatted: beforeCursor + aroundCursor + afterCursor,\n                  cursorNodeStart: beforeCursor.length,\n                  cursorNodeText: aroundCursor\n                };\n              }\n              return {\n                formatted: out.join(\"\")\n              };\n            }\n            module22.exports = {\n              printDocToString\n            };\n          }\n        });\n        var require_doc_debug = __commonJS2({\n          \"src/document/doc-debug.js\"(exports22, module22) {\n            init_define_process();\n            var {\n              isConcat,\n              getDocParts\n            } = require_doc_utils();\n            function flattenDoc(doc2) {\n              if (!doc2) {\n                return \"\";\n              }\n              if (isConcat(doc2)) {\n                const res = [];\n                for (const part of getDocParts(doc2)) {\n                  if (isConcat(part)) {\n                    res.push(...flattenDoc(part).parts);\n                  } else {\n                    const flattened = flattenDoc(part);\n                    if (flattened !== \"\") {\n                      res.push(flattened);\n                    }\n                  }\n                }\n                return {\n                  type: \"concat\",\n                  parts: res\n                };\n              }\n              if (doc2.type === \"if-break\") {\n                return Object.assign(Object.assign({}, doc2), {}, {\n                  breakContents: flattenDoc(doc2.breakContents),\n                  flatContents: flattenDoc(doc2.flatContents)\n                });\n              }\n              if (doc2.type === \"group\") {\n                return Object.assign(Object.assign({}, doc2), {}, {\n                  contents: flattenDoc(doc2.contents),\n                  expandedStates: doc2.expandedStates && doc2.expandedStates.map(flattenDoc)\n                });\n              }\n              if (doc2.type === \"fill\") {\n                return {\n                  type: \"fill\",\n                  parts: doc2.parts.map(flattenDoc)\n                };\n              }\n              if (doc2.contents) {\n                return Object.assign(Object.assign({}, doc2), {}, {\n                  contents: flattenDoc(doc2.contents)\n                });\n              }\n              return doc2;\n            }\n            function printDocToDebug(doc2) {\n              const printedSymbols = /* @__PURE__ */ Object.create(null);\n              const usedKeysForSymbols = /* @__PURE__ */ new Set();\n              return printDoc(flattenDoc(doc2));\n              function printDoc(doc22, index, parentParts) {\n                if (typeof doc22 === \"string\") {\n                  return JSON.stringify(doc22);\n                }\n                if (isConcat(doc22)) {\n                  const printed = getDocParts(doc22).map(printDoc).filter(Boolean);\n                  return printed.length === 1 ? printed[0] : `[${printed.join(\", \")}]`;\n                }\n                if (doc22.type === \"line\") {\n                  const withBreakParent = Array.isArray(parentParts) && parentParts[index + 1] && parentParts[index + 1].type === \"break-parent\";\n                  if (doc22.literal) {\n                    return withBreakParent ? \"literalline\" : \"literallineWithoutBreakParent\";\n                  }\n                  if (doc22.hard) {\n                    return withBreakParent ? \"hardline\" : \"hardlineWithoutBreakParent\";\n                  }\n                  if (doc22.soft) {\n                    return \"softline\";\n                  }\n                  return \"line\";\n                }\n                if (doc22.type === \"break-parent\") {\n                  const afterHardline = Array.isArray(parentParts) && parentParts[index - 1] && parentParts[index - 1].type === \"line\" && parentParts[index - 1].hard;\n                  return afterHardline ? void 0 : \"breakParent\";\n                }\n                if (doc22.type === \"trim\") {\n                  return \"trim\";\n                }\n                if (doc22.type === \"indent\") {\n                  return \"indent(\" + printDoc(doc22.contents) + \")\";\n                }\n                if (doc22.type === \"align\") {\n                  return doc22.n === Number.NEGATIVE_INFINITY ? \"dedentToRoot(\" + printDoc(doc22.contents) + \")\" : doc22.n < 0 ? \"dedent(\" + printDoc(doc22.contents) + \")\" : doc22.n.type === \"root\" ? \"markAsRoot(\" + printDoc(doc22.contents) + \")\" : \"align(\" + JSON.stringify(doc22.n) + \", \" + printDoc(doc22.contents) + \")\";\n                }\n                if (doc22.type === \"if-break\") {\n                  return \"ifBreak(\" + printDoc(doc22.breakContents) + (doc22.flatContents ? \", \" + printDoc(doc22.flatContents) : \"\") + (doc22.groupId ? (!doc22.flatContents ? ', \"\"' : \"\") + `, { groupId: ${printGroupId(doc22.groupId)} }` : \"\") + \")\";\n                }\n                if (doc22.type === \"indent-if-break\") {\n                  const optionsParts = [];\n                  if (doc22.negate) {\n                    optionsParts.push(\"negate: true\");\n                  }\n                  if (doc22.groupId) {\n                    optionsParts.push(`groupId: ${printGroupId(doc22.groupId)}`);\n                  }\n                  const options = optionsParts.length > 0 ? `, { ${optionsParts.join(\", \")} }` : \"\";\n                  return `indentIfBreak(${printDoc(doc22.contents)}${options})`;\n                }\n                if (doc22.type === \"group\") {\n                  const optionsParts = [];\n                  if (doc22.break && doc22.break !== \"propagated\") {\n                    optionsParts.push(\"shouldBreak: true\");\n                  }\n                  if (doc22.id) {\n                    optionsParts.push(`id: ${printGroupId(doc22.id)}`);\n                  }\n                  const options = optionsParts.length > 0 ? `, { ${optionsParts.join(\", \")} }` : \"\";\n                  if (doc22.expandedStates) {\n                    return `conditionalGroup([${doc22.expandedStates.map((part) => printDoc(part)).join(\",\")}]${options})`;\n                  }\n                  return `group(${printDoc(doc22.contents)}${options})`;\n                }\n                if (doc22.type === \"fill\") {\n                  return `fill([${doc22.parts.map((part) => printDoc(part)).join(\", \")}])`;\n                }\n                if (doc22.type === \"line-suffix\") {\n                  return \"lineSuffix(\" + printDoc(doc22.contents) + \")\";\n                }\n                if (doc22.type === \"line-suffix-boundary\") {\n                  return \"lineSuffixBoundary\";\n                }\n                if (doc22.type === \"label\") {\n                  return `label(${JSON.stringify(doc22.label)}, ${printDoc(doc22.contents)})`;\n                }\n                throw new Error(\"Unknown doc type \" + doc22.type);\n              }\n              function printGroupId(id) {\n                if (typeof id !== \"symbol\") {\n                  return JSON.stringify(String(id));\n                }\n                if (id in printedSymbols) {\n                  return printedSymbols[id];\n                }\n                const prefix = String(id).slice(7, -1) || \"symbol\";\n                for (let counter = 0; ; counter++) {\n                  const key = prefix + (counter > 0 ? ` #${counter}` : \"\");\n                  if (!usedKeysForSymbols.has(key)) {\n                    usedKeysForSymbols.add(key);\n                    return printedSymbols[id] = `Symbol.for(${JSON.stringify(key)})`;\n                  }\n                }\n              }\n            }\n            module22.exports = {\n              printDocToDebug\n            };\n          }\n        });\n        init_define_process();\n        module2.exports = {\n          builders: require_doc_builders(),\n          printer: require_doc_printer(),\n          utils: require_doc_utils(),\n          debug: require_doc_debug()\n        };\n      }\n    });\n    return require_doc_js_umd();\n  });\n})(doc);\nconst MAX_LINES = 4;\nconst defaultOptions = {\n  printWidth: 30,\n  tabWidth: 4,\n  useTabs: false\n};\nfunction prettierPrint(doc2) {\n  return docExports.printer.printDocToString(doc2, defaultOptions).formatted;\n}\nfunction addCursor(state, cursor = \"^\", error = false) {\n  const color = (error ? chalk.red : chalk.green).bold;\n  const lines = state.src.split(\"\\n\");\n  const lineIdx = Math.min(lines.length - 1, state.getLineNumber());\n  const startIdx = Math.max(lineIdx - MAX_LINES, 0);\n  const endIdx = Math.min(lineIdx + MAX_LINES + 1, lines.length);\n  const lineSummaries = lines.slice(startIdx, endIdx);\n  if (cursor) {\n    const cursorLine = \" \".repeat(state.getColumnNumber()) + color(cursor);\n    lineSummaries.splice(lineIdx - startIdx + 1, 0, cursorLine);\n  }\n  const resultLines = lineSummaries.map((line, idx) => {\n    const lineNum = startIdx + idx + 1;\n    let paddedLineNum = color.reset.black(String(lineNum));\n    line = lineNum === lineIdx + 1 ? color(line) : line;\n    const paddedLine = `      ${paddedLineNum}| ${line}`;\n    return paddedLine;\n  });\n  return resultLines.join(\"\\n\");\n}\nconst group = (docs, groupOptions = {}) => {\n  return docExports.builders.group(docs, { ...defaultOptions, ...groupOptions });\n};\nconst opStyle = (op) => chalk.gray(op);\nconst PARSER_STRINGS = /* @__PURE__ */ new Map();\nfunction parserPrint(parser) {\n  if (PARSER_STRINGS.has(parser.id)) {\n    return PARSER_STRINGS.get(parser.id);\n  }\n  const print = (innerParser, id) => {\n    if (PARSER_STRINGS.has(innerParser.id)) {\n      return PARSER_STRINGS.get(innerParser.id);\n    }\n    const { name, args, parser: innerInnerParser } = innerParser.context;\n    const parserString = innerInnerParser != null ? print(innerInnerParser, id) : chalk.red.bold(\"unknown\");\n    let s2 = (() => {\n      switch (name) {\n        case \"string\":\n          return chalk.yellow(`\"${args[0]}\"`);\n        case \"regex\":\n        case \"regexConcat\":\n        case \"regexWrap\":\n          return chalk.redBright(`${args[0]}`);\n        case \"wrap\":\n        case \"trim\": {\n          const [left, right] = args;\n          return group([\n            print(left, id),\n            docExports.builders.indent([docExports.builders.softline, parserString]),\n            docExports.builders.softline,\n            print(right, id)\n          ]);\n        }\n        case \"trimWhitespace\":\n          return group([parserString, opStyle(\"?w\")]);\n        case \"not\":\n          return group([\"!\", parserString]);\n        case \"opt\":\n          return group([parserString, opStyle(\"?\")]);\n        case \"next\":\n          const [next] = args;\n          return group([parserString, opStyle(\" >> \"), print(next, id)]);\n        case \"skip\":\n          const [skip] = args;\n          return group([parserString, opStyle(\" << \"), print(skip, id)]);\n        case \"map\":\n          return parserString;\n        case \"all\":\n        case \"then\": {\n          const delim = opStyle(\", \");\n          return group([\n            \"[\",\n            docExports.builders.indent([\n              docExports.builders.softline,\n              docExports.builders.join(\n                [delim, docExports.builders.softline],\n                args.map((x) => print(x, id))\n              )\n            ]),\n            docExports.builders.softline,\n            \"]\"\n          ]);\n        }\n        case \"any\":\n        case \"or\": {\n          const delim = opStyle(\"| \");\n          return group([\n            [\n              docExports.builders.join(\n                [docExports.builders.softline, docExports.builders.ifBreak(delim, \" \" + delim)],\n                args.map((x) => print(x, id))\n              )\n            ]\n          ]);\n        }\n        case \"many\":\n          const [min, max] = args;\n          let bounds = max === Infinity ? `${min},` : `${min},${max}`;\n          bounds = chalk.bold.gray(` {${bounds}}`);\n          return group([parserString, bounds]);\n        case \"sepBy\":\n          return group([\n            parserString,\n            docExports.builders.indent([\" sepBy \", print(args[0], id)])\n          ]);\n        case \"lazy\": {\n          const [lazy2] = args;\n          const p = getLazyParser(lazy2);\n          if (!id) {\n            const s3 = print(p, p.id);\n            PARSER_STRINGS.set(p.id, s3);\n            return s3;\n          } else {\n            return chalk.bold.blue(name);\n          }\n        }\n        case \"debug\":\n          return parserString;\n      }\n    })();\n    s2 ?? (s2 = chalk.red.bold(name));\n    if (id) {\n      PARSER_STRINGS.set(innerParser.id, s2);\n    }\n    return s2;\n  };\n  const doc2 = print(parser);\n  const s = prettierPrint(doc2);\n  PARSER_STRINGS.set(parser.id, s);\n  return s;\n}\nfunction statePrint(state, name = \"\", parserString = \"\") {\n  const stateBgColor = !state.isError ? chalk.bgGreen : chalk.bgRed;\n  const stateColor = !state.isError ? chalk.green : chalk.red;\n  const finished = state.offset >= state.src.length;\n  const stateSymbol = !state.isError ? finished ? \"🎉\" : \"✓\" : \"ｘ\";\n  const stateName = !state.isError ? finished ? \"Done\" : \"Ok\" : \"Err\";\n  const stateString = \" \" + stateName + \" \" + stateSymbol + \" \";\n  const header = group([\n    stateBgColor.bold(stateString),\n    stateColor(`\t${name}\t${state.offset}`),\n    docExports.builders.softline,\n    \"\t\" + chalk.yellow(parserString)\n  ]);\n  const body = (() => {\n    if (state.offset >= state.src.length) {\n      return chalk.bold.greenBright(addCursor(state, \"\", state.isError));\n    }\n    return addCursor(state, \"^\", state.isError);\n  })();\n  const headerBody = group([header, docExports.builders.hardline, docExports.builders.indent([body])]);\n  return prettierPrint(headerBody);\n}\nfunction parserDebug(parser, name = \"\", recursivePrint = false, logger = console.log) {\n  const debug = (state) => {\n    const newState = parser.parser(state);\n    const parserString = recursivePrint ? parserPrint(parser) : parser.context.name;\n    const s = statePrint(newState, name, parserString);\n    logger(s);\n    return newState;\n  };\n  return new Parser(debug, createParserContext(\"debug\", parser, logger));\n}\nclass ParserState {\n  constructor(src, value = void 0, offset = 0, isError = false, furthest = 0) {\n    this.src = src;\n    this.value = value;\n    this.offset = offset;\n    this.isError = isError;\n    this.furthest = furthest;\n  }\n  ok(value, offset = 0) {\n    offset += this.offset;\n    return new ParserState(this.src, value, offset, false);\n  }\n  err(value, offset = 0) {\n    const nextState = this.ok(value, offset);\n    nextState.isError = true;\n    return nextState;\n  }\n  from(value, offset = 0) {\n    offset += this.offset;\n    return new ParserState(this.src, value, offset, this.isError);\n  }\n  getColumnNumber() {\n    const offset = this.offset;\n    const lastNewline = this.src.lastIndexOf(\"\\n\", offset);\n    const columnNumber = lastNewline === -1 ? offset : offset - (lastNewline + 1);\n    return Math.max(0, columnNumber);\n  }\n  getLineNumber() {\n    const newlineIndex = this.src.lastIndexOf(\"\\n\", this.offset);\n    return newlineIndex >= 0 ? this.src.slice(0, newlineIndex).split(\"\\n\").length : 0;\n  }\n  toString() {\n    return statePrint(this);\n  }\n}\nfunction createParserContext(name, parser, ...args) {\n  return {\n    name,\n    parser,\n    args\n  };\n}\nlet PARSER_ID = 0;\nconst MEMO = /* @__PURE__ */ new Map();\nconst LEFT_RECURSION_COUNTS = /* @__PURE__ */ new Map();\nlet lastState;\nfunction mergeErrorState(state) {\n  if (!lastState || lastState && state.offset > lastState.offset) {\n    lastState = state;\n  }\n  return lastState;\n}\nfunction getLazyParser(fn) {\n  if (fn.parser) {\n    return fn.parser;\n  }\n  return fn.parser = fn();\n}\nclass Parser {\n  constructor(parser, context = {}) {\n    __publicField(this, \"id\", PARSER_ID++);\n    __publicField(this, \"state\");\n    this.parser = parser;\n    this.context = context;\n  }\n  reset() {\n    lastState = void 0;\n    MEMO.clear();\n    LEFT_RECURSION_COUNTS.clear();\n  }\n  parse(val) {\n    this.reset();\n    const newState = this.parser(new ParserState(val));\n    this.state = mergeErrorState(newState);\n    this.state.isError = newState.isError;\n    if (this.state.isError) {\n      console.log(this.state.toString());\n    }\n    return newState.value;\n  }\n  getCijKey(state) {\n    return `${this.id}${state.offset}`;\n  }\n  atLeftRecursionLimit(state) {\n    const cij = LEFT_RECURSION_COUNTS.get(this.getCijKey(state)) ?? 0;\n    return cij > state.src.length - state.offset;\n  }\n  memoize() {\n    const memoize = (state) => {\n      const cijKey = this.getCijKey(state);\n      const cij = LEFT_RECURSION_COUNTS.get(cijKey) ?? 0;\n      let cached = MEMO.get(this.id);\n      if (cached && cached.offset >= state.offset) {\n        return cached;\n      } else if (this.atLeftRecursionLimit(state)) {\n        return state.err(void 0);\n      }\n      LEFT_RECURSION_COUNTS.set(cijKey, cij + 1);\n      const newState = this.parser(state);\n      cached = MEMO.get(this.id);\n      if (cached && cached.offset > newState.offset) {\n        newState.offset = cached.offset;\n      } else if (!cached) {\n        MEMO.set(this.id, newState);\n      }\n      return newState;\n    };\n    return new Parser(\n      memoize,\n      createParserContext(\"memoize\", this)\n    );\n  }\n  mergeMemos() {\n    const mergeMemo = (state) => {\n      let cached = MEMO.get(this.id);\n      if (cached) {\n        return cached;\n      } else if (this.atLeftRecursionLimit(state)) {\n        return state.err(void 0);\n      }\n      const newState = this.parser(state);\n      cached = MEMO.get(this.id);\n      if (!cached) {\n        MEMO.set(this.id, newState);\n      }\n      return newState;\n    };\n    return new Parser(\n      mergeMemo,\n      createParserContext(\"mergeMemo\", this)\n    );\n  }\n  then(next) {\n    if (isStringParsers(this, next)) {\n      return concatStringParsers([this, next], \"\", (m) => [m == null ? void 0 : m[0], m == null ? void 0 : m[1]]);\n    }\n    const then = (state) => {\n      const nextState1 = this.parser(state);\n      if (!nextState1.isError) {\n        const nextState2 = next.parser(nextState1);\n        if (!nextState2.isError) {\n          return nextState2.ok([nextState1.value, nextState2.value]);\n        }\n      }\n      mergeErrorState(state);\n      return state.err(void 0);\n    };\n    return new Parser(\n      then,\n      createParserContext(\"then\", this, this, next)\n    );\n  }\n  or(other) {\n    if (isStringParsers(this, other)) {\n      return concatStringParsers([this, other], \"|\");\n    }\n    const or = (state) => {\n      const newState = this.parser(state);\n      if (!newState.isError) {\n        return newState;\n      }\n      return other.parser(state);\n    };\n    return new Parser(\n      or,\n      createParserContext(\"or\", this, this, other)\n    );\n  }\n  chain(fn, chainError = false) {\n    const chain = (state) => {\n      const newState = this.parser(state);\n      if (newState.isError) {\n        return newState;\n      } else if (newState.value || chainError) {\n        return fn(newState.value).parser(newState);\n      }\n      return state;\n    };\n    return new Parser(chain, createParserContext(\"chain\", this, fn));\n  }\n  map(fn, mapError = false) {\n    const map = (state) => {\n      const newState = this.parser(state);\n      if (!newState.isError || mapError) {\n        return newState.ok(fn(newState.value));\n      }\n      return newState;\n    };\n    return new Parser(map, createParserContext(\"map\", this));\n  }\n  mapState(fn) {\n    const mapState = (state) => {\n      const newState = this.parser(state);\n      return fn(newState);\n    };\n    return new Parser(\n      mapState,\n      createParserContext(\"mapState\", this)\n    );\n  }\n  skip(parser) {\n    const skip = (state) => {\n      const nextState1 = this.parser(state);\n      if (!nextState1.isError) {\n        const nextState2 = parser.parser(nextState1);\n        if (!nextState2.isError) {\n          return nextState2.ok(nextState1.value);\n        }\n      }\n      mergeErrorState(state);\n      return state.err(void 0);\n    };\n    return new Parser(\n      skip,\n      createParserContext(\"skip\", this, parser)\n    );\n  }\n  next(parser) {\n    const next = this.then(parser).map(([, b]) => {\n      return b;\n    });\n    next.context = createParserContext(\"next\", this, parser);\n    return next;\n  }\n  opt() {\n    const opt = (state) => {\n      const newState = this.parser(state);\n      if (newState.isError) {\n        mergeErrorState(state);\n        return state.ok(void 0);\n      }\n      return newState;\n    };\n    return new Parser(opt, createParserContext(\"opt\", this));\n  }\n  not(parser) {\n    const negate = (state) => {\n      const newState = this.parser(state);\n      if (newState.isError) {\n        mergeErrorState(state);\n        return state.ok(state.value);\n      } else {\n        return state.err(void 0);\n      }\n    };\n    const not = (state) => {\n      const newState = this.parser(state);\n      if (newState.isError) {\n        mergeErrorState(state);\n        return newState;\n      } else {\n        const nextState = parser.parser(state);\n        if (nextState.isError) {\n          return newState;\n        } else {\n          mergeErrorState(state);\n          return state.err(void 0);\n        }\n      }\n    };\n    return new Parser(\n      parser ? not : negate,\n      createParserContext(\"not\", this, parser)\n    );\n  }\n  wrap(start, end, discard = true) {\n    if (!discard) {\n      return all(start, this, end);\n    }\n    if (isStringParsers(start, this, end)) {\n      return wrapStringParsers(start, this, end);\n    }\n    const wrap = start.next(this).skip(end);\n    wrap.context = createParserContext(\"wrap\", this, start, end);\n    return wrap;\n  }\n  trim(parser = whitespace, discard = true) {\n    var _a;\n    if (!discard) {\n      return all(parser, this, parser);\n    }\n    if (((_a = parser.context) == null ? void 0 : _a.name) === \"whitespace\") {\n      if (isStringParsers(this, parser)) {\n        return concatStringParsers(\n          [parser, this, parser],\n          \"\",\n          (m) => m == null ? void 0 : m[2]\n        );\n      }\n      const whitespaceTrim = (state) => {\n        const newState = trimStateWhitespace(state);\n        const tmpState = this.parser(newState);\n        if (tmpState.isError) {\n          mergeErrorState(state);\n          return state.err(void 0);\n        } else {\n          return trimStateWhitespace(tmpState);\n        }\n      };\n      return new Parser(\n        whitespaceTrim,\n        createParserContext(\"trimWhitespace\", this)\n      );\n    }\n    return this.wrap(parser, parser);\n  }\n  many(min = 0, max = Infinity) {\n    const many = (state) => {\n      const matches = [];\n      let newState = state;\n      for (let i = 0; i < max; i += 1) {\n        const tmpState = this.parser(newState);\n        if (tmpState.isError) {\n          break;\n        }\n        matches.push(tmpState.value);\n        newState = tmpState;\n      }\n      if (matches.length >= min) {\n        return newState.ok(matches);\n      }\n      mergeErrorState(state);\n      return state.err([]);\n    };\n    return new Parser(\n      many,\n      createParserContext(\"many\", this, min, max)\n    );\n  }\n  sepBy(sep, min = 0, max = Infinity) {\n    const sepBy = (state) => {\n      const matches = [];\n      let newState = state;\n      for (let i = 0; i < max; i += 1) {\n        const tmpState = this.parser(newState);\n        if (tmpState.isError) {\n          break;\n        }\n        newState = tmpState;\n        matches.push(newState.value);\n        const sepState = sep.parser(newState);\n        if (sepState.isError) {\n          break;\n        }\n        newState = sepState;\n      }\n      if (matches.length > min) {\n        return newState.ok(matches);\n      }\n      mergeErrorState(state);\n      return state.err([]);\n    };\n    return new Parser(\n      sepBy,\n      createParserContext(\"sepBy\", this, sep)\n    );\n  }\n  eof() {\n    const p = this.skip(eof());\n    p.context = createParserContext(\"eof\", this);\n    return p;\n  }\n  debug(name = \"\", recursivePrint = false, logger = console.log) {\n    return parserDebug(this, name, recursivePrint, logger);\n  }\n  toString() {\n    return parserPrint(this);\n  }\n  static lazy(fn) {\n    const lazy2 = (state) => {\n      return getLazyParser(fn).parser(state);\n    };\n    return new Parser(lazy2, createParserContext(\"lazy\", void 0, fn));\n  }\n}\nfunction isStringParsers(...parsers) {\n  return parsers.every(\n    (p) => {\n      var _a, _b, _c, _d;\n      return (((_a = p.context) == null ? void 0 : _a.name) === \"string\" || ((_b = p.context) == null ? void 0 : _b.name) === \"regex\" || ((_c = p.context) == null ? void 0 : _c.name) === \"whitespace\") && ((_d = p.context) == null ? void 0 : _d.args);\n    }\n  );\n}\nfunction stringParserValue(p) {\n  var _a, _b, _c, _d, _e;\n  if (((_a = p.context) == null ? void 0 : _a.name) === \"string\") {\n    return (_b = p.context) == null ? void 0 : _b.args[0].replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  } else if (((_c = p.context) == null ? void 0 : _c.name) === \"regex\" || ((_d = p.context) == null ? void 0 : _d.name) === \"whitespace\") {\n    return (_e = p.context) == null ? void 0 : _e.args[0].source;\n  }\n}\nfunction concatStringParsers(parsers, delim = \"\", matchFunction) {\n  const s = parsers.map((s2) => `(${stringParserValue(s2)})`).join(delim);\n  const r = new RegExp(s);\n  const rP = regex(r, matchFunction);\n  if (delim !== \"|\") {\n    rP.context = createParserContext(\"regexConcat\", this, r);\n  }\n  return rP;\n}\nfunction wrapStringParsers(left, p, right) {\n  const rP = concatStringParsers([left, p, right], \"\", (m) => {\n    return m == null ? void 0 : m[2];\n  });\n  rP.context.name = \"regexWrap\";\n  return rP;\n}\nfunction eof() {\n  const eof2 = (state) => {\n    if (state.offset >= state.src.length) {\n      return state.ok(void 0);\n    } else {\n      mergeErrorState(state);\n      return state.err();\n    }\n  };\n  return new Parser(eof2, createParserContext(\"eof\", void 0));\n}\nfunction lazy(target, propertyName, descriptor) {\n  const method = descriptor.value.bind(target);\n  descriptor.value = function() {\n    const lazy2 = (state) => {\n      return getLazyParser(method).parser(state);\n    };\n    return new Parser(lazy2, createParserContext(\"lazy\", void 0, method));\n  };\n}\nfunction any(...parsers) {\n  if (isStringParsers(...parsers)) {\n    return concatStringParsers(parsers, \"|\");\n  }\n  const any2 = (state) => {\n    for (const parser of parsers) {\n      const newState = parser.parser(state);\n      if (!newState.isError) {\n        return newState;\n      }\n    }\n    mergeErrorState(state);\n    return state.err(void 0);\n  };\n  return new Parser(\n    parsers.length === 1 ? parsers[0].parser : any2,\n    createParserContext(\"any\", void 0, ...parsers)\n  );\n}\nfunction all(...parsers) {\n  const all2 = (state) => {\n    const matches = [];\n    for (const parser of parsers) {\n      const newState = parser.parser(state);\n      if (newState.isError) {\n        return newState;\n      }\n      if (newState.value !== void 0) {\n        matches.push(newState.value);\n      }\n      state = newState;\n    }\n    mergeErrorState(state);\n    return state.ok(matches);\n  };\n  return new Parser(\n    parsers.length === 1 ? parsers[0].parser : all2,\n    createParserContext(\"all\", void 0, ...parsers)\n  );\n}\nfunction string(str) {\n  const string2 = (state) => {\n    if (state.offset >= state.src.length) {\n      return state.err(void 0);\n    }\n    const s = state.src.slice(state.offset, state.offset + str.length);\n    if (s === str) {\n      return state.ok(s, s.length);\n    }\n    mergeErrorState(state);\n    return state.err(void 0);\n  };\n  return new Parser(\n    string2,\n    createParserContext(\"string\", void 0, str)\n  );\n}\nfunction regex(r, matchFunction = (m) => m == null ? void 0 : m[0]) {\n  const flags = r.flags.replace(/y/g, \"\");\n  const sticky = new RegExp(r, flags + \"y\");\n  const regex2 = (state) => {\n    if (state.offset >= state.src.length) {\n      return state.err(void 0);\n    }\n    sticky.lastIndex = state.offset;\n    const match = matchFunction(state.src.match(sticky));\n    if (match) {\n      return state.ok(match, sticky.lastIndex - state.offset);\n    } else if (match === \"\") {\n      return state.ok(void 0);\n    }\n    mergeErrorState(state);\n    return state.err(void 0);\n  };\n  return new Parser(\n    regex2,\n    createParserContext(\"regex\", void 0, r)\n  );\n}\nconst WHITESPACE = /\\s*/y;\nconst trimStateWhitespace = (state) => {\n  var _a;\n  if (state.offset >= state.src.length) {\n    return state;\n  }\n  WHITESPACE.lastIndex = state.offset;\n  const match = ((_a = state.src.match(WHITESPACE)) == null ? void 0 : _a[0]) ?? \"\";\n  return state.ok(state.value, match.length);\n};\nconst whitespace = regex(/\\s*/);\nwhitespace.context.name = \"whitespace\";\nexport {\n  Parser,\n  all,\n  any,\n  eof,\n  getLazyParser,\n  lazy,\n  mergeErrorState,\n  regex,\n  string,\n  whitespace\n};\n//# sourceMappingURL=parse.js.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { regex, any, string, all, lazy, eof, Parser } from \"./parse.js\";\nimport \"chalk\";\nvar __defProp2 = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp2(target, key, result);\n  return result;\n};\nconst operatorToType = {\n  \"|\": \"alternation\",\n  \",\": \"concatenation\",\n  \"-\": \"minus\",\n  \"<<\": \"skip\",\n  \">>\": \"next\",\n  \"*\": \"many\",\n  \"+\": \"many1\",\n  \"?\": \"optional\",\n  \"?w\": \"optionalWhitespace\"\n};\nconst reduceBinaryExpression = ([left, rightExpression]) => {\n  if (rightExpression.length === 0) {\n    return left;\n  }\n  return rightExpression.reduce((acc, [op, right]) => {\n    return {\n      type: operatorToType[op],\n      value: [acc, right]\n    };\n  }, left);\n};\nconst mapFactor = ([term, op]) => {\n  if (op === void 0) {\n    return term;\n  }\n  const type = operatorToType[op];\n  return {\n    type,\n    value: term\n  };\n};\nfunction mapStatePosition(parser) {\n  return parser.mapState((state) => {\n    if (state.value) {\n      state.value.column = state.getColumnNumber();\n      state.value.line = state.getLineNumber();\n      state.value.offset = state.offset;\n    }\n    return state;\n  });\n}\nconst defaultOptions = {\n  debug: false,\n  comments: true\n};\nclass EBNFGrammar {\n  constructor(options) {\n    __publicField(this, \"options\");\n    this.options = {\n      ...defaultOptions,\n      ...options ?? {}\n    };\n  }\n  identifier() {\n    return regex(/[_a-zA-Z][_a-zA-Z0-9]*/).trim();\n  }\n  literal() {\n    return this.trimBigComment(\n      any(\n        regex(/[^\"]+/).wrap(string('\"'), string('\"')),\n        regex(/[^']+/).wrap(string(\"'\"), string(\"'\"))\n      ).map((value) => {\n        return {\n          type: \"literal\",\n          value\n        };\n      })\n    );\n  }\n  epsilon() {\n    return any(string(\"epsilon\"), string(\"ε\")).trim().map(() => {\n      return {\n        type: \"epsilon\",\n        value: void 0\n      };\n    });\n  }\n  nonterminal() {\n    return this.identifier().map((value) => {\n      return {\n        type: \"nonterminal\",\n        value\n      };\n    });\n  }\n  bigComment() {\n    return regex(/\\/\\*[^\\*]*\\*\\//).trim();\n  }\n  comment() {\n    return regex(/\\/\\/.*/).or(this.bigComment()).trim();\n  }\n  trimBigComment(e) {\n    return e.trim(this.bigComment().many(), false).map(([left, expression, right]) => {\n      expression.comment = {\n        left,\n        right\n      };\n      return expression;\n    });\n  }\n  group() {\n    return this.rhs().trim().wrap(string(\"(\"), string(\")\")).map((value) => {\n      return {\n        type: \"group\",\n        value\n      };\n    });\n  }\n  regex() {\n    return regex(/[^\\/]*/).wrap(string(\"/\"), string(\"/\")).then(regex(/[gimuy]*/).opt()).map(([r, flags]) => {\n      return {\n        type: \"regex\",\n        value: new RegExp(r, flags)\n      };\n    });\n  }\n  optionalGroup() {\n    return this.rhs().trim().wrap(string(\"[\"), string(\"]\")).map((value) => {\n      return {\n        type: \"optional\",\n        value: {\n          type: \"group\",\n          value\n        }\n      };\n    });\n  }\n  manyGroup() {\n    return this.rhs().trim().wrap(string(\"{\"), string(\"}\")).map((value) => {\n      return {\n        type: \"many\",\n        value: {\n          type: \"group\",\n          value\n        }\n      };\n    });\n  }\n  lhs() {\n    return this.identifier();\n  }\n  term() {\n    return mapStatePosition(\n      any(\n        this.epsilon(),\n        this.group(),\n        this.optionalGroup(),\n        this.manyGroup(),\n        this.nonterminal(),\n        this.literal(),\n        this.regex()\n      )\n    );\n  }\n  factor() {\n    return this.trimBigComment(\n      all(\n        this.term(),\n        any(\n          string(\"?w\").trim(),\n          string(\"?\").trim(),\n          string(\"*\").trim(),\n          string(\"+\").trim()\n        ).opt()\n      ).map(mapFactor)\n    );\n  }\n  binaryFactor() {\n    return all(\n      this.factor(),\n      all(\n        any(string(\"<<\").trim(), string(\">>\").trim(), string(\"-\").trim()),\n        this.factor()\n      ).many()\n    ).map(reduceBinaryExpression);\n  }\n  concatenation() {\n    return this.binaryFactor().sepBy(string(\",\").trim()).map((value) => {\n      if (value.length === 1) {\n        return value[0];\n      }\n      return {\n        type: \"concatenation\",\n        value\n      };\n    });\n  }\n  alternation() {\n    return this.concatenation().sepBy(string(\"|\").trim()).map((value) => {\n      if (value.length === 1) {\n        return value[0];\n      }\n      return {\n        type: \"alternation\",\n        value\n      };\n    });\n  }\n  rhs() {\n    return this.alternation();\n  }\n  productionRule() {\n    return all(\n      this.lhs(),\n      string(\"=\").trim(),\n      this.rhs(),\n      any(string(\";\"), string(\".\")).trim()\n    ).map(([name, , expression]) => {\n      return { name, expression };\n    });\n  }\n  grammar() {\n    return this.productionRule().trim(this.comment().many(), false).map(([above, rule, below]) => {\n      rule.comment = {\n        above,\n        below\n      };\n      return rule;\n    }).many(1);\n  }\n}\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"bigComment\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"comment\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"group\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"regex\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"optionalGroup\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"manyGroup\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"lhs\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"term\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"factor\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"binaryFactor\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"concatenation\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"alternation\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"rhs\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"productionRule\", 1);\n__decorateClass([\n  lazy\n], EBNFGrammar.prototype, \"grammar\", 1);\nfunction topologicalSort(ast) {\n  const visited = /* @__PURE__ */ new Set();\n  const order = [];\n  function visit(node, stack) {\n    if (stack.has(node) || visited.has(node)) {\n      return;\n    }\n    stack.add(node);\n    const productionRule = ast.get(node);\n    if (!productionRule) {\n      return;\n    }\n    const expr = productionRule.expression;\n    if (expr.type === \"nonterminal\") {\n      visit(expr.value, stack);\n    } else if (expr.value instanceof Array) {\n      for (const child of expr.value) {\n        if (child.type === \"nonterminal\") {\n          visit(child.value, stack);\n        }\n      }\n    }\n    visited.add(node);\n    stack.delete(node);\n    order.unshift(ast.get(node));\n  }\n  for (const [name] of ast) {\n    visit(name, /* @__PURE__ */ new Set());\n  }\n  const newAST = /* @__PURE__ */ new Map();\n  for (const rule of order) {\n    newAST.set(rule.name, rule);\n  }\n  return newAST;\n}\nconst findCommonPrefix = (e1, e2) => {\n  if (!(e1 == null ? void 0 : e1.type) || !(e2 == null ? void 0 : e2.type) || e1.type !== e2.type) {\n    return void 0;\n  }\n  switch (e1.type) {\n    case \"literal\":\n    case \"nonterminal\": {\n      if (e1.value !== e2.value) {\n        return void 0;\n      } else {\n        return [e1, { type: \"epsilon\" }, { type: \"epsilon\" }];\n      }\n    }\n    case \"group\":\n    case \"optional\":\n    case \"optionalWhitespace\":\n    case \"many\":\n    case \"many1\": {\n      const common = findCommonPrefix(e1.value, e2.value);\n      if (!common) {\n        return void 0;\n      } else {\n        return [\n          {\n            type: e1.type,\n            value: common[0]\n          },\n          {\n            type: e1.type,\n            value: common[1]\n          },\n          {\n            type: e1.type,\n            value: common[2]\n          }\n        ];\n      }\n    }\n    case \"concatenation\": {\n      const commons = e1.value.map(\n        (_, i) => findCommonPrefix(e1.value[i], e2.value[i])\n      );\n      if (commons.some((x) => x === void 0)) {\n        return void 0;\n      }\n      const prefixes = commons.map((x) => x[0]);\n      const e1s = commons.map((x) => x[1]);\n      const e2s = commons.map((x) => x[2]);\n      const startIx = prefixes.lastIndexOf(null);\n      if (startIx === prefixes.length - 1) {\n        return void 0;\n      }\n      const prefix = prefixes.slice(startIx + 1);\n      return [\n        {\n          type: \"concatenation\",\n          value: prefix\n        },\n        {\n          type: \"concatenation\",\n          value: e1s\n        },\n        {\n          type: \"concatenation\",\n          value: e2s\n        }\n      ];\n    }\n    case \"alternation\":\n      for (const e of e1.value) {\n        const common = findCommonPrefix(e, e2);\n        if (common) {\n          return common;\n        }\n      }\n      for (const e of e2.value) {\n        const common = findCommonPrefix(e1, e);\n        if (common) {\n          return common;\n        }\n      }\n      return void 0;\n  }\n  return void 0;\n};\nconst comparePrefix = (prefix, expr) => {\n  if (prefix.type !== expr.type) {\n    return false;\n  }\n  switch (prefix.type) {\n    case \"literal\":\n    case \"nonterminal\":\n      return prefix.value === expr.value;\n    case \"group\":\n    case \"optional\":\n    case \"many\":\n    case \"many1\":\n      return comparePrefix(prefix.value, expr.value);\n    case \"minus\":\n    case \"skip\":\n    case \"next\":\n      return comparePrefix(prefix.value[0], expr.value[0]) && comparePrefix(prefix.value[1], expr.value[1]);\n    case \"concatenation\":\n      return prefix.value.every((e, i) => comparePrefix(e, expr.value[i]));\n    case \"alternation\":\n      return prefix.value.some((e, i) => comparePrefix(e, expr.value[i]));\n    case \"epsilon\":\n      return true;\n  }\n};\nfunction rewriteTreeLeftRecursion(name, expr) {\n  const prefixMap = /* @__PURE__ */ new Map();\n  let commonPrefix = null;\n  for (let i = 0; i < expr.value.length - 1; i++) {\n    const e1 = expr.value[i];\n    const e2 = expr.value[i + 1];\n    const common = findCommonPrefix(e1, e2);\n    if (common) {\n      const [prefix, te1, te2] = common;\n      if (commonPrefix !== null && comparePrefix(prefix, commonPrefix)) {\n        prefixMap.get(commonPrefix).push(te2);\n      } else {\n        prefixMap.set(prefix, [te1, te2]);\n        commonPrefix = prefix;\n      }\n      if (i === expr.value.length - 2) {\n        expr.value.shift();\n      }\n      expr.value.shift();\n      i -= 1;\n    }\n  }\n  for (const [prefix, expressions] of prefixMap) {\n    const alternation = {\n      type: \"alternation\",\n      value: expressions\n    };\n    const newExpr = {\n      type: \"concatenation\",\n      value: [\n        {\n          type: \"group\",\n          value: alternation\n        },\n        {\n          type: \"group\",\n          value: prefix\n        }\n      ]\n    };\n    expr.value.push(newExpr);\n  }\n}\nconst removeDirectLeftRecursionProduction = (name, expr, tailName) => {\n  const head = [];\n  const tail = [];\n  const APrime = {\n    type: \"nonterminal\",\n    value: tailName\n  };\n  for (let i = 0; i < expr.value.length; i++) {\n    const e = expr.value[i];\n    if (e.type === \"concatenation\" && e.value[0].value === name) {\n      tail.push({\n        type: \"concatenation\",\n        value: [...e.value.slice(1), APrime]\n      });\n    } else {\n      head.push({\n        type: \"concatenation\",\n        value: [e, APrime]\n      });\n    }\n  }\n  if (tail.length === 0) {\n    return [void 0, void 0];\n  }\n  tail.push({\n    type: \"epsilon\"\n  });\n  return [\n    {\n      type: \"alternation\",\n      value: head\n    },\n    {\n      type: \"alternation\",\n      value: tail\n    }\n  ];\n};\nfunction removeDirectLeftRecursion(ast) {\n  const newNodes = /* @__PURE__ */ new Map();\n  let uniqueIndex = 0;\n  for (const [name, productionRule] of ast) {\n    const { expression } = productionRule;\n    if (expression.type === \"alternation\") {\n      const tailName = `${name}_${uniqueIndex++}`;\n      const [head, tail] = removeDirectLeftRecursionProduction(\n        name,\n        expression,\n        tailName\n      );\n      if (head) {\n        newNodes.set(tailName, {\n          name: tailName,\n          expression: tail\n        });\n        newNodes.set(name, {\n          name,\n          expression: head,\n          comment: productionRule.comment\n        });\n      }\n    }\n  }\n  if (newNodes.size === 0) {\n    return ast;\n  }\n  for (const [name, productionRule] of newNodes) {\n    ast.set(name, productionRule);\n  }\n  for (const [name, productionRule] of ast) {\n    const { expression } = productionRule;\n    if (expression.type === \"alternation\") {\n      rewriteTreeLeftRecursion(name, expression);\n    }\n  }\n}\nfunction removeIndirectLeftRecursion(ast) {\n  for (const [name, expression] of ast) {\n  }\n}\nfunction removeAllLeftRecursion(ast) {\n  const newAST = topologicalSort(ast);\n  removeDirectLeftRecursion(newAST);\n  return newAST;\n}\nfunction generateASTFromEBNF(input) {\n  const parser = new EBNFGrammar().grammar().eof();\n  const parsed = parser.parse(input);\n  if (!parsed) {\n    return [parser];\n  }\n  const ast = parsed.reduce((acc, productionRule, ix) => {\n    return acc.set(productionRule.name, productionRule);\n  }, /* @__PURE__ */ new Map());\n  return [parser, ast];\n}\nfunction generateParserFromAST(ast) {\n  function generateParser(name, expr) {\n    var _a, _b;\n    switch (expr.type) {\n      case \"literal\":\n        return string(expr.value);\n      case \"nonterminal\":\n        const l = Parser.lazy(() => {\n          return nonterminals[expr.value];\n        });\n        l.context.name = expr.value;\n        return l;\n      case \"epsilon\":\n        return eof().opt();\n      case \"group\":\n        return generateParser(name, expr.value);\n      case \"regex\":\n        return regex(expr.value);\n      case \"optionalWhitespace\":\n        return generateParser(name, expr.value).trim();\n      case \"optional\":\n        return generateParser(name, expr.value).opt();\n      case \"many\":\n        return generateParser(name, expr.value).many();\n      case \"many1\":\n        return generateParser(name, expr.value).many(1);\n      case \"skip\":\n        return generateParser(name, expr.value[0]).skip(\n          generateParser(name, expr.value[1])\n        );\n      case \"next\":\n        return generateParser(name, expr.value[0]).next(\n          generateParser(name, expr.value[1])\n        );\n      case \"minus\":\n        return generateParser(name, expr.value[0]).not(\n          generateParser(name, expr.value[1])\n        );\n      case \"concatenation\": {\n        const parsers = expr.value.map((x) => generateParser(name, x));\n        if (((_b = (_a = parsers.at(-1)) == null ? void 0 : _a.context) == null ? void 0 : _b.name) === \"eof\") {\n          parsers.pop();\n        }\n        return all(...parsers);\n      }\n      case \"alternation\": {\n        return any(...expr.value.map((x) => generateParser(name, x)));\n      }\n    }\n  }\n  const nonterminals = {};\n  for (const [name, productionRule] of ast.entries()) {\n    nonterminals[name] = generateParser(name, productionRule.expression);\n  }\n  return nonterminals;\n}\nfunction generateParserFromEBNF(input, optimizeGraph = false) {\n  let [parser, ast] = generateASTFromEBNF(input);\n  if (optimizeGraph) {\n    ast = removeAllLeftRecursion(ast);\n  }\n  const nonterminals = generateParserFromAST(ast);\n  return [nonterminals, ast];\n}\nexport {\n  EBNFGrammar,\n  comparePrefix,\n  findCommonPrefix,\n  generateASTFromEBNF,\n  generateParserFromAST,\n  generateParserFromEBNF,\n  removeAllLeftRecursion,\n  removeDirectLeftRecursion,\n  removeIndirectLeftRecursion,\n  rewriteTreeLeftRecursion,\n  topologicalSort\n};\n//# sourceMappingURL=ebnf.js.map\n","import path from \"path\";\nimport vscode from \"vscode\";\nimport { formatBBNF } from \"../../src/prettier-plugin-bbnf\";\n\nimport {\n    DocumentRangeFormattingRequest,\n    LanguageClient,\n    LanguageClientOptions,\n    ServerOptions,\n    TransportKind,\n} from \"vscode-languageclient/node\";\nimport { generateParserFromEBNF } from \"@mkbabb/parse-that/ebnf\";\n\nconst DOCUMENT_SELECTOR = {\n    language: \"bbnf\",\n    scheme: \"file\",\n} as vscode.DocumentSelector;\n\nlet LANGUAGE_CLIENT: LanguageClient;\n\ntype TestGrammarCache = {\n    nonterminal: string;\n    testString: string;\n};\nconst testGrammarCache = new Map<string, TestGrammarCache>();\n\nconst testGrammar = vscode.commands.registerCommand(\n    \"extension.testGrammar\",\n    async () => {\n        const editor = vscode.window.activeTextEditor;\n        if (!editor) {\n            return;\n        }\n        const document = editor.document;\n        const text = document.getText();\n\n        if (text.length === 0) {\n            return;\n        }\n\n        let nonterminals, ast;\n        try {\n            [nonterminals, ast] = generateParserFromEBNF(text);\n        } catch (e) {\n            return;\n        }\n\n        const key = document.uri.toString();\n        if (!testGrammarCache.has(key)) {\n            testGrammarCache.set(key, {\n                nonterminal: \"\",\n                testString: \"\",\n            });\n        }\n        const cache = testGrammarCache.get(key)!;\n\n        const nonterminalString = await vscode.window.showInputBox({\n            prompt: \"Enter a nonterminal to test\",\n            placeHolder: \"Type here...\",\n            value: cache.nonterminal,\n        });\n\n        if (!nonterminalString || !nonterminals[nonterminalString]) {\n            vscode.window.showErrorMessage(\n                `Nonterminal ${nonterminalString} not found`\n            );\n            return;\n        }\n\n        cache.nonterminal = nonterminalString;\n\n        const testString = await vscode.window.showInputBox({\n            prompt: \"Enter your test string\",\n            placeHolder: \"Type here...\",\n            value: cache.testString,\n        });\n\n        if (!testString) {\n            vscode.window.showErrorMessage(\"No test string provided\");\n            return;\n        }\n        cache.testString = testString;\n\n        const parser = nonterminals[nonterminalString];\n        const result = parser.parse(testString);\n\n        if (!result) {\n            vscode.window.showInformationMessage(\"No match X\");\n        } else {\n            vscode.window.showInformationMessage(`Matched ✓: ${result}`);\n        }\n    }\n);\n\nexport function activate(context: vscode.ExtensionContext) {\n    // The server is implemented in node\n    const serverModule = context.asAbsolutePath(\n        path.join(\"server\", \"out\", \"server.js\")\n    );\n\n    // If the extension is launched in debug mode then the debug server options are used\n    // Otherwise the run options are used\n    const serverOptions: ServerOptions = {\n        run: { module: serverModule, transport: TransportKind.ipc },\n        debug: {\n            module: serverModule,\n            transport: TransportKind.ipc,\n        },\n    };\n\n    // Options to control the language client\n    const clientOptions: LanguageClientOptions = {\n        // Register the server for plain text documents\n        documentSelector: [DOCUMENT_SELECTOR] as any,\n        synchronize: {\n            // Notify the server about file changes to '.clientrc files contained in the workspace\n            fileEvents: vscode.workspace.createFileSystemWatcher(\"**/.clientrc\"),\n        },\n    };\n\n    // Create the language client and start the client.\n    LANGUAGE_CLIENT = new LanguageClient(\n        \"languageServerExample\",\n        \"Language Server Example\",\n        serverOptions,\n        clientOptions\n    );\n\n    // Start the client. This will also launch the server\n    LANGUAGE_CLIENT.start();\n\n    context.subscriptions.push(testGrammar);\n}\n\nexport function deactivate(): Thenable<void> | undefined {\n    if (!LANGUAGE_CLIENT) {\n        return undefined;\n    }\n    return LANGUAGE_CLIENT.stop();\n}\n"],"names":["colorName","cssKeywords","require$$0","reverseKeywords","key","convert","conversions","model","channels","labels","rgb","r","g","b","min","max","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","k","m","y","comparativeDistance","x","reversed","currentClosestDistance","currentClosestKeyword","keyword","value","distance","z","xyz","a","hsl","t2","t3","val","t1","i","smin","lmin","sv","hsv","hi","f","p","q","t","vmin","sl","hwb","wh","bl","ratio","n","cmyk","lab","y2","x2","z2","lch","hr","args","saturation","ansi","color","mult","rem","string","match","colorString","char","integer","chroma","grayscale","hue","hcg","pure","mg","apple","gray","buildGraph","graph","models","len","deriveBFS","fromModel","queue","current","adjacents","adjacent","node","link","from","to","wrapConversion","toModel","path","fn","cur","route","conversion","require$$1","wrapRaw","wrappedFn","arg0","wrapRounded","result","routes","colorConvert","wrapAnsi16","offset","wrapAnsi256","code","wrapAnsi16m","ansi2ansi","rgb2rgb","setLazyProperty","object","property","get","makeDynamicStyles","wrap","targetSpace","identity","isBackground","styles","sourceSpace","suite","name","assembleStyles","codes","groupName","group","styleName","style","module","browser","stringReplaceAll","substring","replacer","index","substringLength","endIndex","returnValue","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR","util","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","u","bracket","parseArguments","arguments_","results","chunks","matches","chunk","number","escape","character","parseStyle","buildStyle","chalk","enabled","layer","templates","temporary","escapeCharacter","inverse","close","errMessage","ansiStyles","stdoutColor","stderrColor","require$$2","isArray","levelMapping","applyOptions","options","colorLevel","ChalkClass","chalkFactory","chalkTag","Chalk","builder","createBuilder","createStyler","usedModels","level","styler","bgModel","proto","open","parent","openAll","closeAll","self","_styler","_isEmpty","applyStyle","lfIndex","template","strings","firstString","parts","require$$3","source","__defProp","__defNormalProp","obj","__publicField","docExports","doc","exports","factory","__getOwnPropNames","__commonJS","cb","mod","require_doc_js_umd","exports2","module2","__create","__defProp2","__getOwnPropDesc","__getOwnPropNames2","__getProtoOf","__hasOwnProp","__esm","res","__commonJS2","__export","target","all2","__copyProps","except","desc","__toESM","isNodeMode","__toCommonJS","init_define_process","require_doc_builders","exports22","module22","concat","indent","contents","align","widthOrString","group2","opts","dedentToRoot","markAsRoot","dedent","conditionalGroup","states","fill","ifBreak","breakContents","flatContents","indentIfBreak","lineSuffix","lineSuffixBoundary","breakParent","trim","hardlineWithoutBreakParent","literallineWithoutBreakParent","line","softline","hardline","literalline","cursor","join","sep","arr","addAlignmentToDoc","doc2","size","tabWidth","aligned","label","label2","require_end_of_line","guessEndOfLine","text","convertEndOfLineToChars","countEndOfLineChars","eol","regex2","endOfLines","normalizeEndOfLine","require_get_last","getLast","ansiRegex","onlyFirst","pattern","init_ansi_regex","stripAnsi","string2","init_strip_ansi","isFullwidthCodePoint","codePoint","init_is_fullwidth_code_point","require_emoji_regex","string_width_exports","stringWidth","import_emoji_regex","width","init_string_width","require_get_string_width","stringWidth2","notAsciiRegex","getStringWidth","require_doc_utils","isConcat","getDocParts","traverseDocOnExitStackMarker","traverseDoc","onEnter","onExit","shouldTraverseConditionalGroups","docsStack","doc22","ic","mapDoc","mapped","rec","process2","expandedStates","findInDoc","defaultValue","hasStopped","findInDocOnEnterFn","maybeResult","willBreakFn","willBreak","breakParentGroup","groupStack","parentGroup","propagateBreaks","alreadyVisitedSet","propagateBreaksOnEnterFn","propagateBreaksOnExitFn","removeLinesFn","removeLines","isHardline","nextDoc","stripDocTrailingHardlineFromDoc","lastPart","stripTrailingHardline","cleanDoc","cleanDocFn","part","currentPart","restParts","currentDoc","normalizeParts","newParts","normalizeDoc","replaceEndOfLine","replaceTextEndOfLine","replacement","canBreakFn","canBreak","require_doc_printer","groupModeMap","MODE_BREAK","MODE_FLAT","rootIndent","makeIndent","ind","generateInd","makeAlign","indent2","widthOrDoc","newPart","length","lastTabs","lastSpaces","flush","addTabs","addSpaces","flushSpaces","count","flushTabs","resetLast","out","trimCount","trimmed","fits","next","restCommands","hasLineSuffix","mustBeFlat","restIdx","cmds","mode","groupMode","printDocToString","newLine","pos","shouldRemeasure","formatted","mostExpanded","state","cmd","content","whitespace2","contentFlatCmd","contentBreakCmd","contentFits","whitespaceFlatCmd","whitespaceBreakCmd","remainingCmd","secondContent","cursorPlaceholderIndex","otherCursorPlaceholderIndex","beforeCursor","aroundCursor","afterCursor","require_doc_debug","flattenDoc","flattened","printDocToDebug","printedSymbols","usedKeysForSymbols","printDoc","parentParts","printed","withBreakParent","printGroupId","optionsParts","id","counter","MAX_LINES","defaultOptions","prettierPrint","addCursor","error","lines","lineIdx","startIdx","endIdx","lineSummaries","cursorLine","idx","lineNum","paddedLineNum","docs","groupOptions","opStyle","op","PARSER_STRINGS","parserPrint","parser","print","innerParser","innerInnerParser","parserString","s2","left","right","skip","delim","bounds","lazy2","getLazyParser","s3","statePrint","stateBgColor","stateColor","finished","stateSymbol","stateString","header","body","headerBody","parserDebug","recursivePrint","logger","debug","newState","Parser","createParserContext","ParserState","src","isError","furthest","nextState","lastNewline","columnNumber","newlineIndex","PARSER_ID","MEMO","LEFT_RECURSION_COUNTS","lastState","mergeErrorState","context","memoize","cijKey","cij","cached","mergeMemo","isStringParsers","concatStringParsers","then","nextState1","nextState2","other","or","chainError","chain","mapError","map","mapState","opt","negate","not","start","end","discard","all","wrapStringParsers","whitespace","_a","whitespaceTrim","trimStateWhitespace","tmpState","many","sepBy","sepState","eof","parsers","_b","_c","_d","stringParserValue","_e","matchFunction","rP","regex","eof2","lazy","propertyName","descriptor","method","any","any2","str","flags","sticky","WHITESPACE","__decorateClass","decorators","kind","decorator","operatorToType","reduceBinaryExpression","rightExpression","acc","mapFactor","term","mapStatePosition","EBNFGrammar","expression","above","rule","below","topologicalSort","ast","visited","order","visit","stack","productionRule","expr","child","newAST","findCommonPrefix","e1","e2","common","commons","_","prefixes","e1s","e2s","startIx","e","comparePrefix","rewriteTreeLeftRecursion","prefixMap","commonPrefix","te1","te2","expressions","newExpr","removeDirectLeftRecursionProduction","tailName","head","tail","APrime","removeDirectLeftRecursion","newNodes","uniqueIndex","removeAllLeftRecursion","generateASTFromEBNF","input","parsed","ix","generateParserFromAST","generateParser","nonterminals","generateParserFromEBNF","optimizeGraph","DOCUMENT_SELECTOR","LANGUAGE_CLIENT","testGrammarCache","testGrammar","vscode","editor","document","cache","nonterminalString","testString","activate","serverModule","serverOptions","TransportKind","clientOptions","LanguageClient","deactivate"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}